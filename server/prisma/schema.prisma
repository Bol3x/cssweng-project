generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model product {
  product_ID       Int               @id @default(autoincrement()) @unique(map: "product_id_UNIQUE")
  name             String            @db.VarChar(255)
  brand            String            @db.VarChar(255)
  description	   String?			 @db.VarChar(255)
  type             Int
  stock            Int               @default(0) @db.UnsignedInt
  last_updated     DateTime          @db.DateTime(0)
  sell_price       Decimal		 	 @default(0) @db.Decimal(10,2)
  sales            Int               @default(0) @db.UnsignedInt
  revenue          Decimal           @default(0) @db.Decimal(10,2) //@default(dbgenerated("sales * sell_price"))
  avg_value        Decimal           @default(0) @db.Decimal(10,2) //@default(dbgenerated("stock * sell_price"))
  order_amt	   	   Int           	 @default(0) @db.UnsignedInt
  product_category product_category? @relation(fields: [type], references: [category_ID], onUpdate: NoAction, map: "fk_ptype")

  @@index([type], map: "fk_ptype_idx")
  @@unique([name, brand], map: "name_brand_UNIQUE")
}

model product_category {
  category_ID   Int       @id @unique(map: "category_id_UNIQUE") @default(autoincrement())
  name          String    @db.VarChar(255) @unique(map: "name_UNIQUE")
  products      product[]
}

model user {
  user_ID       Int           @id @default(autoincrement())
  type          Int
  pass          String        @db.VarChar(255)
  email         String        @unique(map: "email_UNIQUE") @db.VarChar(255)
  username      String        @db.VarChar(255) //@default(dbgenerated("CONCAT(firstname, ' ', lastname)"))	  

  user_category user_category @relation(fields: [type], references: [utype_ID], onDelete: Cascade, onUpdate: NoAction, map: "fk_utype")

  user_question_answer user_question_answer[]

  @@index([type], map: "fk_utype_idx")
}

model user_category {
  utype_ID    Int    @id @default(autoincrement())
  utype_title String @unique(map: "utype_title_UNIQUE") @db.VarChar(255)
  
  user        user[]
}

model security_question {
  question_ID   Int    @id @default(autoincrement())
  question      String @unique(map: "question_UNIQUE") @db.VarChar(255)

  user_question_answer user_question_answer[]
}

model user_question_answer {
  user_ID       	Int	   	@id
  question_ID   	Int
  answer       	 	String 				@db.VarChar(255)

  user          	user   				@relation(fields: [user_ID], references: [user_ID], onDelete: Cascade, onUpdate: NoAction, map: "fk_user")
  security_question security_question 	@relation(fields: [question_ID], references: [question_ID], onDelete: Cascade, onUpdate: NoAction, map: "fk_question")

  @@index([user_ID], map: "fk_user_idx")
  @@index([question_ID], map: "fk_question_idx")
}
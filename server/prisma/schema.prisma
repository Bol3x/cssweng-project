generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model product {
  product_ID       	Int               @id @default(autoincrement())
  name     			String            @db.VarChar(255)
  type     			Int?
  stock    			Int               @default(0)
  last_updated     	DateTime          @db.DateTime(0)
  last_updated_by  	Int?
  desc     			String            @db.VarChar(255)
  cat_name 			String?           @db.VarChar(255)
  brand    			String?           @db.VarChar(255)
  sales	   			Int
  revenue  			Int
  avg_value  		Int
  user             	user?             @relation(fields: [last_updated_by], references: [user_ID], onUpdate: NoAction, map: "fk_last_by")
  product_category 	product_category? @relation(fields: [type], references: [category_ID], onUpdate: NoAction, map: "fk_type")

  @@index([last_updated_by], map: "fk_last_by_idx")
  @@index([type], map: "fk_type_idx")
}

model product_category {
  category_ID   Int       @id @unique(map: "category_id_UNIQUE") @default(autoincrement())
  name 			String    @unique(map: "category_name_UNIQUE") @db.VarChar(255)
  products      product[]
}

model user {
  user_ID        Int           @id @default(autoincrement())
  type      Int
  pass      String        @db.VarChar(255)
  email     String        @unique(map: "user_email_UNIQUE") @db.VarChar(255)
  firstname String        @db.VarChar(255)
  lastname  String        @db.VarChar(255)
  fullname  String?       @db.VarChar(45)
  products       product[]
  user_category  user_category @relation(fields: [type], references: [utype_ID], onDelete: Cascade, onUpdate: NoAction, map: "fk_utype")

  @@index([type], map: "fk_utype_idx")
}

model user_category {
  utype_ID    Int    @id @default(autoincrement())
  utype_title String @unique(map: "utype_title_UNIQUE") @db.VarChar(255)
  user        user[]
}

model session {
  id        	String   @id
  sid       	String   @unique
  data      	String	 @db.Text
  expiresAt   	DateTime
}